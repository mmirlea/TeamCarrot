<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper의 전체 경로 -->
<mapper namespace="com.carrot.board.dao.ProductMapper">
	
	<!-- join을 위한 resultmap -->
	<resultMap id="ProMemJoin" type="ProductDTO">
		<result property="p_menu" column="p_menu"/>
		<result property="p_num" column="p_num"/>
		<result property="p_cate" column="p_cate"/>
		<result property="p_email" column="p_email"/>
		<result property="p_title" column="p_title"/>
		<result property="p_content" column="p_content"/>
		<result property="p_price" column="p_price"/>
		<result property="p_likey" column="p_likey"/>
		<result property="p_comm" column="p_comm"/>
		<result property="p_viewcnt" column="p_viewcnt"/>
		<result property="p_tempsaveyn" column="p_tempsaveyn"/>
		<result property="p_negoyn" column="p_negoyn"/>
		<result property="p_img" column="p_img"/>
		<result property="p_update" column="p_update"/>
		<result property="p_crdate" column="p_crdate"/>
		<association property="userDTO" javaType="UserDTO">
			<id property="m_email" column="m_email"/>
			<result property="m_nicknm" column="m_nicknm"/>
			<result property="m_addr1" column="m_addr1"/>
			<result property="m_addr2" column="m_addr2"/>
			<result property="m_ondo" column="m_ondo"/>
		</association>
	</resultMap>
		
	<!-- 게시글 목록 조회 -->             
	<select id="selectAll" resultMap="ProMemJoin">
		SELECT p.p_menu, p.p_num, p.p_cate, m.m_nicknm, m_addr1, m_addr2, 
			   p.p_title, p.p_content, p.p_price, p.p_likey, p.p_comm, p.p_img, p.p_update, p.p_crdate
		FROM product p
		INNER JOIN member m
		ON p.p_email = m.m_email
		WHERE p.p_menu = '1'
		ORDER BY p.p_crdate DESC, p.p_num DESC
	</select>
	
	<!-- 게시글 읽어오기 -->	
	<select id="select" parameterType="int" resultMap="ProMemJoin">
		SELECT p.p_menu, p.p_num, p.p_cate, p.p_email, p.p_title, p.p_content, p.p_img, 
			   p.p_crdate, p.p_update, p.p_tempsaveyn, p.p_price, p.p_likey, p.p_likeyemail, p.p_negoyn, p.p_img,
			   p.p_comm, p.p_viewcnt, m.m_nicknm, m.m_addr1, m.m_addr2, m.m_ondo, m.m_proimg
		FROM product p 
		INNER JOIN member m
		ON p.p_email = m.m_email
		WHERE p_menu = '1' AND p_num = #{p_num}
	</select>
	
	<!-- 전체 게시물 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM product
	</select>
	
	<!-- 글 추가하기 -->
	<insert id="insert" parameterType="ProductDTO">
		INSERT INTO product(p_menu, p_num, p_cate, p_email, p_title, p_content, p_crdate, p_tempsaveyn, p_price, p_negoyn, p_img)
		VALUES('1', seq_product_num.nextval, #{p_cate}, #{p_email}, #{p_title}, #{p_content}, SYSDATE, #{p_tempsaveyn}, #{p_price}, #{p_negoyn}, #{p_img})
	</insert>
	<!-- 임시저장 추가하기 -->
	<insert id="save" parameterType="ProductDTO">
		INSERT INTO PRODUCT (p_num, p_cate, p_email, p_title, p_content, p_tempsaveyn, p_price, p_negoyn, p_img)
		VALUES (SEQ_PRODUCT_NUM.NEXTVAL, #{p_cate}, #{p_email}, #{p_title}, #{p_content}, 'Y', #{p_price}, #{p_negoyn}, #{p_img})
	</insert>
	
	<!-- 글 수정하기 -->
	<update id="update" parameterType="ProductDTO">
		UPDATE product
		SET p_title = #{p_title}, p_content = #{p_content}, p_update = SYSDATE, 
			p_price = #{p_price}, p_negoyn = #{p_negoyn}, p_img = #{p_img} 
		WHERE p_menu = '1' AND p_num = #{p_num} AND p_email = #{p_email} 
	</update>
	<!-- 임시저장 작성하기 -->
	<update id="tempUpdate" parameterType="ProductDTO">
		UPDATE PRODUCT
		   SET p_title = #{p_title},
		       p_content = #{p_content},
		       p_price = #{p_price},
		       p_negoyn = #{p_negoyn},
		       p_img = #{p_img}
		       AND p_tempsaveyn = 'N'
		       p_update = SYSDATE
		 WHERE p_menu = '1'
		   AND p_num = #{p_num}
		   AND p_email = #{p_email}
		   AND p_tempsaveyn = 'Y'
	</update>
	
	<!-- 글 삭제하기 -->
	<delete id="delete" parameterType="map">
		DELETE FROM product
		WHERE p_menu = '1' AND p_num = #{p_num} AND p_email = #{p_email} 
	</delete>
	
	<!-- 게시글 전체 삭제 -->
	<delete id="deleteAll">
		DELETE FROM product
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="increaseViewCnt" parameterType="int">
		UPDATE product
		SET p_viewcnt = p_viewcnt + 1
		WHERE p_menu = '1'
		AND p_num = #{p_num}
	</update>
	
	<!-- 좋아요 증가 -->
	<update id="increaseLikeCnt" parameterType="map">
		UPDATE product
		   SET p_likey = p_likey + 1,
		       p_likeyemail = p_likeyemail || #{p_email} || '/'
		 WHERE p_menu = '1'
		   AND p_num = #{p_num}
	</update>
	
	<!-- 좋아요 감소 -->
	<update id="decreaseLikeCnt" parameterType="map">
		UPDATE product
		   SET p_likey = p_likey - 1,
		       p_likeyemail = #{p_likeyemail}
		 WHERE p_menu = '1'
		   AND p_num = #{p_num}
	</update>
	
	<select id="getLikeyEmail" parameterType="productDTO" resultType="string">
		SELECT p_likeyemail FROM product
		 WHERE p_num = #{p_num}
		 AND p_likeyemail LIKE LIKE '%'||#{p_email}||'%'
	</select>
	
	<!-- 페이징 처리하기 -->
	<select id="selectPage" parameterType="SearchConditionP" resultMap="ProMemJoin">
		SELECT *
		FROM(SELECT ROWNUM rNum, A.*
			FROM (SELECT p.p_menu, p.p_num, p.p_cate, m.m_nicknm, m_addr1, m_addr2, 
			  			 p.p_title, p.p_content, p.p_price, p.p_likey, p.p_comm, p.p_viewcnt, p.p_img, p.p_update, p.p_crdate
				  FROM product p
				  INNER JOIN member m
				  ON p.p_email = m.m_email
				  WHERE p.p_menu = '1'
				  ORDER BY p.p_crdate DESC, p.p_num DESC) A)
		WHERE rNum BETWEEN ((NVL(#{page}, 0)-1) * #{pageSize} +1) AND (NVL(#{page}, 0) * #{pageSize})
	</select>
	
	<!-- addr1 검색 조건 -->
	<sql id="searchCondition">
		<choose>
			<when test='addr1=="opRegion"'>
				AND p.p_title LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				ANd p.p_title LIKE '%'||#{keyword}||'%'
				AND m.m_addr1 LIKE '%'||#{addr1}||'%'
			</otherwise>
		</choose>
	</sql>
	<!-- cate 검색 조건 -->
	<sql id="searchCondition2">
		<choose>
			<when test='cate=="digital"'>
				AND p.p_cate LIKE '%디지털기기%'		
			</when>
			<when test='cate=="furniture"'>
				AND p.p_cate Like '%가구%'
			</when>
			<when test='cate=="kitchen"'>
				AND p.p_cate Like '%생활%'
			</when>
			<when test='cate=="baby"'>
				AND p.p_cate Like '%유아용품%'
			</when>
			<when test='cate=="clothes"'>
				AND p.p_cate Like '%의류%'
			</when>
			<when test='cate=="book"'>
				AND p.p_cate Like '%도서%'
			</when>
			<when test='cate=="ticket"'>
				AND p.p_cate Like '%티켓%'
			</when>
			<when test='cate=="etc"'>
				AND p.p_cate Like '%기타%'
			</when>
			<otherwise>
				AND 1=1
			</otherwise>
		</choose>
	</sql>
	<!-- 게시글 검색하기 -->
	<select id="searchSelectPage" parameterType="SearchConditionP" resultMap="ProMemJoin">
		SELECT * 
		FROM(SELECT ROWNUM rNum, A.* 
			FROM(SELECT p.p_menu, p.p_num, p.p_cate, m.m_nicknm, m.m_addr1, m.m_addr2, 
			  			 p.p_title, p.p_content, p.p_price, p.p_likey, p.p_comm, p.p_viewcnt, p.p_img, p.p_update, p.p_crdate
				  FROM product p
				  INNER JOIN member m
				  ON p.p_email = m.m_email
				  WHERE p.p_menu = '1'
				  <include refid="searchCondition"></include>
				  <include refid="searchCondition2"></include>
				  ORDER BY p.p_crdate DESC, p.p_num DESC) A)
		WHERE rNum BETWEEN ((NVL(#{page}, 0)-1) * #{pageSize} +1) AND (NVL(#{page}, 0) * #{pageSize})
	</select>
	<!-- 검색했을 때의 게시글 개수 -->
	<select id="searchResultCnt" parameterType="SearchConditionP" resultType="int">
		SELECT count(*)
		FROM (SELECT p.p_menu, p.p_num, p.p_cate, m.m_nicknm, m_addr1, m_addr2, 
			  			 p.p_title, p.p_content, p.p_price, p.p_likey, p.p_comm, p.p_img, p.p_update, p.p_crdate
				  FROM product p
				  INNER JOIN member m
				  ON p.p_email = m.m_email
				  WHERE p.p_menu = '1'
		WHERE 1=1
		<include refid="searchCondition"></include>
		<include refid="searchCondition2"></include>
	</select>
	
	<!-- 상품 댓글 -->
	<update id="updateCommentspCnt" parameterType="map">
		UPDATE PRODUCT
		SET P_COMM = P_COMM + #{cnt}
		WHERE P_NUM = #{p_num}
	</update>
</mapper>