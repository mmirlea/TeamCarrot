<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper의 전체 경로 -->
<mapper namespace="com.carrot.board.dao.BoardMapper">

	<resultMap id="BoardJoin" type="BoardDTO">
		<result property="b_menu" column="B_MENU" />
		<result property="b_num" column="B_NUM" />
		<result property="b_cate" column="B_CATE" />
		<result property="b_email" column="B_EMAIL" />
		<result property="b_title" column="B_TITLE" />
		<result property="b_content" column="B_CONTENT" />
		<result property="b_crDate" column="B_CRDATE" />
		<result property="b_upDate" column="B_UPDATE" />
		<result property="b_likey" column="B_LIKEY" />
		<result property="b_likeyEmail" column="B_LIKEYEMAIL" />
		<result property="b_comm" column="B_COMM" />
		<result property="b_viewCnt" column="B_VIEWCNT" />
		<result property="b_img" column="B_IMG" />
		<association property="userDTO" javaType="UserDTO">
			<id property="m_email" column="M_EMAIL" />
			<result property="m_nicknm" column="M_NICKNM" />
			<result property="m_addr1" column="M_ADDR1" />
			<result property="m_addr2" column="M_ADDR2" />
			<result property="m_ondo" column="M_ONDO" />
		</association>
	</resultMap>

	<!-- 게시글 읽어오기 -->
	<select id="select" parameterType="int" resultMap="BoardJoin">
		SELECT B_MENU,   B_NUM,    B_CATE,  B_EMAIL, B_TITLE,   B_CONTENT, 
			   B_CRDATE, B_UPDATE, B_LIKEY, B_COMM,  B_VIEWCNT, 
			   M_NICKNM, M_ADDR1, B_IMG
		  FROM BOARD LEFT OUTER JOIN MEMBER
		    ON B_EMAIL = M_EMAIL
		 WHERE B_MENU = 2
	<!-- 	<include refid="searchCate"></include> -->
		   AND B_NUM = #{b_num}
		 ORDER BY B_NUM DESC
	</select>

	<!-- 게시글 목록 조회(등록일 기준으로 내림차순) -->
	<select id="selectAll" resultMap="BoardJoin">
		SELECT B_MENU,    B_NUM, 	B_CATE,   B_EMAIL, B_TITLE,
			   B_CONTENT, B_CRDATE, B_LIKEY,  B_COMM,  B_VIEWCNT, 
			   M_NICKNM,  M_ADDR1,  M_ADDR2, B_IMG
		  FROM BOARD LEFT OUTER JOIN MEMBER
		    ON B_EMAIL = M_EMAIL
		 WHERE B_MENU = '2'
		<!-- AND B_TEMPSAVEYN = 'N' -->   
		 ORDER BY B_CRDATE DESC, B_NUM DESC
	</select>

	<sql id="searchCate">
		<choose>
			<when test='option =="C"'>
			 	AND B_CATE = #{keyword}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>

	<!-- 전체 게시물 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		  FROM BOARD
		 WHERE B_TEMPSAVEYN = 'N'
	     <!-- WHERE B_MENU = '2' -->
	</select>

	<!-- 글 추가하기 -->
	<insert id="insert" parameterType="BoardDTO">
		INSERT INTO BOARD (B_MENU, B_NUM, B_CATE, B_EMAIL, B_TITLE, B_CONTENT, B_IMG)
		VALUES (2, SEQ_BOARD_SEQ.NEXTVAL, #{b_cate}, #{b_email}, #{b_title}, #{b_content}, #{b_img})
	</insert>
	
	<!-- 임시저장 추가하기 -->
	<insert id="save" parameterType="BoardDTO">
		INSERT INTO BOARD (B_NUM, B_CATE, B_EMAIL, B_TITLE, B_CONTENT, B_TEMPSAVEYN, B_IMG)
		VALUES (SEQ_BOARD_SEQ.NEXTVAL, #{b_cate}, #{b_email}, #{b_title}, #{b_content}, 'Y', #{b_img})
	</insert>

	<!-- 글 수정하기 -->
	<update id="update" parameterType="BoardDTO">
		UPDATE BOARD
		   SET B_TITLE = #{b_title},
		       B_CONTENT = #{b_content},
		       B_CATE = #{b_cate},
		       B_IMG = #{b_img},
		       B_UPDATE = SYSDATE
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
		   AND B_EMAIL = #{b_email}
	</update>
	
	<!-- 임시저장 작성하기 -->
	<update id="tempUpdate" parameterType="BoardDTO">
		UPDATE BOARD
		   SET B_TITLE = #{b_title},
		       B_CONTENT = #{b_content},
		       AND B_TEMPSAVEYN = 'N'
		       B_UPDATE = SYSDATE
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
		   AND B_EMAIL = #{b_email}
		   AND B_TEMPSAVEYN = 'Y'
	</update>

	<!-- 글 삭제하기(게시글 번호와 작성자가 일치하는 경우에만 삭제 가능) -->
	<delete id="delete" parameterType="map">
		DELETE FROM BOARD
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
		   AND B_EMAIL = #{b_email}
	</delete>

	<!-- 관리자의 경우 삭제하도록 -->
<!-- 	<delete id="deleteForAdmin" parameterType="int">
		DELETE BOARD
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
	</delete> -->

	<!-- 게시글 전체 삭제 -->
	<delete id="deleteAll">
		DELETE FROM BOARD
		 WHERE B_MENU = '2'
	</delete>

	<!-- 조회수 증가 -->
	<update id="increaseViewCnt" parameterType="int">
		UPDATE BOARD
		   SET B_VIEWCNT = B_VIEWCNT + 1
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
	</update>
	
	<!-- 좋아요 증가 -->
	<update id="increaseLikeCnt" parameterType="map">
		UPDATE BOARD
		   SET B_LIKEY = B_LIKEY + 1
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
	</update>
	
	<!-- 좋아요 감소 -->
	<update id="decreaseLikeCnt" parameterType="map">
		UPDATE BOARD
		   SET B_LIKEY = B_LIKEY - 1
		 WHERE B_MENU = '2'
		   AND B_NUM = #{b_num}
	</update>
	
	<!-- 페이징 처리하기 -->
	<select id="selectPage" parameterType="map" resultType="BoardDTO">
		SELECT *
		  FROM (SELECT ROWNUM RUNM, A.*
				  FROM (SELECT B_NUM, B_CATE, B_EMAIL, B_TITLE, B_CONTENT, B_CRDATE, B_LIKEY, B_COMM, B_IMG 
					      FROM BOARD
					     WHERE B_MENU = '2'
					       AND B_TEMPSAVEYN = 'N'
						 ORDER BY B_CRDATE DESC, B_NUM DESC) A)
		 WHERE RUNM BETWEEN ((NVL(#{page}, 0)-1) * #{pageSize} +1) AND (NVL(#{page}, 0) * #{pageSize})
	</select>

	<sql id="searchCondition">
		<choose>
			<when test='addr1=="opRegion"'>
				AND B_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				AND (B_TITLE LIKE '%'||#{keyword}||'%' 
					OR M_ADDR1 LIKE '%'||#{keyword}||'%')
			</otherwise>
		</choose>
	</sql>
	
	<sql id="searchAll">
		<choose>
			<when test='searchOption=="board"'>
			</when>
			<otherwise>
				UNION ALL
				SELECT P_NUM, P_CATE, P_EMAIL, P_TITLE, P_CONTENT, P_CRDATE, P_LIKEY, P_COMM
					      FROM PRODUCT
					     WHERE 1 = 1
					       AND P_MENU = '1'
					       AND P_TEMPSAVEYN = 'N'
					    <include refid="searchCondition"></include>
						ORDER BY P_CRDATE DESC, P_NUM DESC
			</otherwise>
		</choose>
	</sql>

	<!-- 게시글 검색하기, 검색 후 페이징 처리 되어야 하기 때문에   --> 
	<!-- SearchCondition 어떤 패키지에 포함되어있는지 원래는 표기해야함 -> 등록하면 안해도됨  -->
	<select id="searchSelectPage" parameterType="SearchCondition" resultMap="BoardJoin">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.*
				  FROM (SELECT B_MENU,   B_NUM,    B_CATE,  B_EMAIL, 	  B_TITLE, B_CONTENT,
				  			   B_CRDATE, B_UPDATE, B_LIKEY, B_LIKEYEMAIL, B_COMM,  B_VIEWCNT,
				  			   M_NICKNM, M_ADDR1,  M_ADDR2, B_IMG   
					      FROM BOARD LEFT OUTER JOIN MEMBER
		    				ON B_EMAIL = M_EMAIL
		 				 WHERE B_MENU = '2'
					       AND B_TEMPSAVEYN = 'N'
					    <include refid="searchCondition"></include>
						ORDER BY B_CRDATE DESC, B_NUM DESC) A)
		 WHERE RNUM BETWEEN ((NVL(#{page}, 0)-1) * #{pageSize} +1) AND (NVL(#{page}, 0) * #{pageSize})
	</select>

	<!-- 검색했을 때 게시글 개수 -->
	<!-- <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
		SELECT COUNT(*)
	      FROM BOARD
	     WHERE 1 = 1
	       AND B_MENU = '2'
	    <include refid="searchCondition"></include>
	</select> -->

	<!-- 댓글 추가 삭제 시 board의 comments_cnt의 값이 달라져야함 -->
<!-- 	<update id="updateCommentsCnt" parameterType="map">
		UPDATE BOARD
		   SET B_COMM = B_COMM + #{cnt}
		   WHERE B_MENU = '2'
		     AND B_NUM = #{b_num}
	</update> -->

	<update id="updateCommentsCnt" parameterType="map">
		UPDATE BOARD
		SET B_COMM = B_COMM + #{cnt}
		WHERE B_NUM = #{b_num}
	</update>
</mapper>