<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.carrot.user.dao.UserMapper">
	<!-- 회원가입하기 -->
	<insert id="register" parameterType="UserDTO">
		INSERT INTO MEMBER(M_EMAIL, M_PW, M_NUM, M_NICKNM, M_PROIMG, M_ADDR1, M_ADDR2)
		VALUES(#{m_email}, #{m_pw}, seq_member_num.nextval, #{m_nicknm}, #{m_proimg}, #{m_addr1}, #{m_addr2})
	</insert>

	<!-- 이메일 중복 체크 -->
	<select id="emailOverlap" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE M_EMAIL = #{m_email}
	</select>

	<!-- 로그인 -->
	<select id="login" resultType="UserDTO">
		SELECT M_EMAIL, M_PW
		FROM MEMBER
		WHERE M_EMAIL=#{m_email} AND M_PW=#{m_pw}
	</select>

	<!-- 마이페이지 -->
	<select id="mypageInfo" parameterType="String"
		resultType="UserDTO">
		SELECT M_EMAIL, M_PW, M_NUM, M_NICKNM, M_PROIMG ,M_ONDO,
		M_ADDR1, M_ADDR2
		FROM MEMBER
		WHERE M_EMAIL=#{m_email}
	</select>

	<!-- 내프로필 수정 -->
	<update id="modify" parameterType="UserDTO">
		UPDATE MEMBER
		SET
		M_NICKNM=#{m_nicknm}, M_PROIMG=#{m_proimg}
		WHERE M_EMAIL=#{m_email}
	</update>

	<update id="modNoImg" parameterType="UserDTO">
		UPDATE MEMBER
		SET
		M_NICKNM=#{m_nicknm}
		WHERE M_EMAIL=#{m_email}
	</update>

	<!-- 비밀번호 변경 -->
	<update id="modifyPw" parameterType="UserDTO">
		UPDATE MEMBER
		SET
		M_PW=#{m_pw}
		WHERE M_EMAIL=#{m_email}
	</update>

	<!-- 주소 변경 -->
	<update id="modifyAddr" parameterType="UserDTO">
		UPDATE MEMBER
		SET
		M_ADDR1=#{m_addr1}, M_ADDR2=#{m_addr2}
		WHERE M_EMAIL=#{m_email}
	</update>

	<!-- 계정 삭제 -->
	<update id="delUser" parameterType="UserDTO">
		DELETE FROM MEMBER
		WHERE
		M_EMAIL=#{m_email}
	</update>

	<!-- 게시글 목록 출력 -->
	<!-- join을 위한 resultmap -->
	<resultMap id="ProMemJoin" type="ProductDTO">
		<result property="p_menu" column="p_menu" />
		<result property="p_num" column="p_num" />
		<result property="p_cate" column="p_cate" />
		<result property="p_title" column="p_title" />
		<result property="p_content" column="p_content" />
		<result property="p_price" column="p_price" />
		<result property="p_likey" column="p_likey" />
		<result property="p_comm" column="p_comm" />
		<result property="p_viewcnt" column="p_viewcnt" />
		<association property="userDTO" javaType="UserDTO">
			<id property="m_email" column="m_email" />
			<result property="m_nicknm" column="m_nicknm" />
			<result property="m_addr1" column="m_addr1" />
			<result property="m_addr2" column="m_addr2" />
			<result property="m_ondo" column="m_ondo" />
		</association>
	</resultMap>
	
	<!-- 전체 게시물 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM product

	</select>
	
	<!-- 페이징 처리하기 -->
	<select id="selectPage" parameterType="SearchConditionM" resultMap="ProMemJoin">
		SELECT *
		FROM(SELECT ROWNUM rNum, A.*
			FROM (SELECT p.p_menu, p.p_num, p.p_cate, m.m_nicknm, m_addr1, m_addr2, p.p_email,
			  			 p.p_title, p.p_content, p.p_price, p.p_likey, p.p_comm
				  FROM product p
				  INNER JOIN member m
				  ON p.p_email = m.m_email
				  WHERE p.p_menu = '1'
				  ORDER BY p.p_crdate DESC, p.p_num DESC) A)
		WHERE rNum BETWEEN ((NVL(#{page}, 0)-1) * #{pageSize} +1) AND (NVL(#{page}, 0) * #{pageSize})
	</select>
</mapper>